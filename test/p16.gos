deffunct quicksel(li){
    declare n = listlen(li);;
    declare h = n - n%2;
    if n%2 == 0 then {
        declare k = h/2;
        declare j = callfun quick(li, k);;
        declare ji = callfun quick(li, k-1);;
        declare jii = j + ji;
        functret(jii/2);
    }
    else{
        declare k = k/2;
        functret(callfun quick(li,k););        
    };
};

deffunct quick(li, k){
    declare h = listlen(li);;
    if h == 1 then {
        functret(li[0]);
    }
    declare pivot = li[0];
    declare lilow = [];
    declare count = 1;
    while count<x do {
    if li[count]<pivot then{
        listadd(lilow,li[count]);
    }
    assign count = count + 1;
    };
    assign count = 1;
    declare lihigh = [];
    while count<x do {
    if li[count]>pivot then{
        listadd(lihigh,li[count]);
    }
    assign count = count + 1;
    };  
    assign count = 0;
    declare lipiv = [];
    while count<x do {
    if li[count]==pivot then{
        listadd(lipiv,li[count]);
    }
    assign count = count + 1;
    };   
    declare lenlow = listlen(lilow);;
    declare lenhigh = listlen(lipiv);; 
    if k < lenlow then functret(callfun quick(lilow, k););
    else{
        if k < lenlow + lenhigh then functret(pivot);
        else functret(callfun quick(lihigh,k-lenlow-lenhigh););;
    };
};